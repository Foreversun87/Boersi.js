[{"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\index.js":"1","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\App.js":"2","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\reducer\\opentrade\\opentrade_reducer.js":"3","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\Loader.jsx":"4","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\context\\SearchbarContext.jsx":"5","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\draft.jsx":"6","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\Draft.jsx":"7","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\WYSIWYG.jsx":"8","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\modal\\openTrade\\ModalOpenTrade.jsx":"9","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\modal\\strategieTrade\\ModalStrategieTrade.jsx":"10","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\modal\\OpenSelect.jsx":"11","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\context\\OpenTradeContext.jsx":"12","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\reducer\\action.js":"13","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\context\\StrategieTradeContext.jsx":"14","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\reducer\\strategietrade\\strategietrade_reducer.js":"15","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\modal\\modal-style.js":"16","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\context\\LoginContext.jsx":"17","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\reducer\\login\\login_reducer.js":"18","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\helper\\formatDate.js":"19","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\helper\\strategieMath.js":"20","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\context\\GoMarketTradeContext.jsx":"21","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\reducer\\gomarket\\gomarkettrade_reducer.js":"22","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\modal\\gomarketTrade\\ModalGoMarket.jsx":"23","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\modal\\gomarketTrade\\ModalGoMarketOnVista.jsx":"24","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\context\\ClosedTradeContext.jsx":"25","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\reducer\\closed\\closedtrade_reducer.js":"26","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\modal\\closedTrade\\ModalClosedTrade.jsx":"27","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\pages\\main\\MainPage.jsx":"28","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\pages\\main\\components\\Main.jsx":"29","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\pages\\main\\components\\MainOpenTrades.jsx":"30","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\pages\\main\\components\\MainStrategieTrades.jsx":"31","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\pages\\main\\components\\MainGoMarketTrades.jsx":"32","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\Navbar.jsx":"33","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\layout\\Layout.jsx":"34","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\pages\\view\\ViewPage.jsx":"35","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\pages\\login\\Login.jsx":"36","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\modal\\sidebar\\ModalSidebar.jsx":"37","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\PrivateRoute.jsx":"38","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\pages\\view\\DataTable.jsx":"39"},{"size":411,"mtime":1610110274758,"results":"40","hashOfConfig":"41"},{"size":981,"mtime":1610024225080,"results":"42","hashOfConfig":"41"},{"size":1579,"mtime":1608728918115,"results":"43","hashOfConfig":"41"},{"size":203,"mtime":1608317821910,"results":"44","hashOfConfig":"41"},{"size":2404,"mtime":1608726415128,"results":"45","hashOfConfig":"41"},{"size":6288,"mtime":1608329728529,"results":"46","hashOfConfig":"41"},{"size":665,"mtime":1609784066388,"results":"47","hashOfConfig":"41"},{"size":1266,"mtime":1609783990446,"results":"48","hashOfConfig":"41"},{"size":3893,"mtime":1610131283569,"results":"49","hashOfConfig":"41"},{"size":8883,"mtime":1611332565476,"results":"50","hashOfConfig":"41"},{"size":785,"mtime":1608725611991,"results":"51","hashOfConfig":"41"},{"size":4328,"mtime":1610375887601,"results":"52","hashOfConfig":"41"},{"size":1077,"mtime":1611228803419,"results":"53","hashOfConfig":"41"},{"size":3763,"mtime":1610130949326,"results":"54","hashOfConfig":"41"},{"size":371,"mtime":1609334241639,"results":"55","hashOfConfig":"41"},{"size":1768,"mtime":1609851287804,"results":"56","hashOfConfig":"41"},{"size":2038,"mtime":1611229828174,"results":"57","hashOfConfig":"41"},{"size":539,"mtime":1611228773937,"results":"58","hashOfConfig":"41"},{"size":345,"mtime":1610313928706,"results":"59","hashOfConfig":"41"},{"size":2691,"mtime":1611233809846,"results":"60","hashOfConfig":"41"},{"size":3377,"mtime":1610131465533,"results":"61","hashOfConfig":"41"},{"size":486,"mtime":1609534544807,"results":"62","hashOfConfig":"41"},{"size":9130,"mtime":1610187681823,"results":"63","hashOfConfig":"41"},{"size":2804,"mtime":1610265738236,"results":"64","hashOfConfig":"41"},{"size":3613,"mtime":1611239614947,"results":"65","hashOfConfig":"41"},{"size":351,"mtime":1609612816923,"results":"66","hashOfConfig":"41"},{"size":1815,"mtime":1610267047557,"results":"67","hashOfConfig":"41"},{"size":960,"mtime":1609866531122,"results":"68","hashOfConfig":"41"},{"size":401,"mtime":1609779855289,"results":"69","hashOfConfig":"41"},{"size":2900,"mtime":1609779816024,"results":"70","hashOfConfig":"41"},{"size":2870,"mtime":1609779834724,"results":"71","hashOfConfig":"41"},{"size":3213,"mtime":1611762235015,"results":"72","hashOfConfig":"41"},{"size":1252,"mtime":1611236768282,"results":"73","hashOfConfig":"41"},{"size":1320,"mtime":1610110041021,"results":"74","hashOfConfig":"41"},{"size":264,"mtime":1610124327425,"results":"75","hashOfConfig":"41"},{"size":1758,"mtime":1611229151221,"results":"76","hashOfConfig":"41"},{"size":1452,"mtime":1610127981064,"results":"77","hashOfConfig":"41"},{"size":522,"mtime":1609959671751,"results":"78","hashOfConfig":"41"},{"size":2687,"mtime":1611331982973,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"dw8qg2",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":7,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\index.js",[],["168","169"],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\App.js",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\reducer\\opentrade\\opentrade_reducer.js",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\Loader.jsx",[],["170","171"],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\context\\SearchbarContext.jsx",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\draft.jsx",["172","173","174","175","176","177","178"],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\Draft.jsx",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\WYSIWYG.jsx",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\modal\\openTrade\\ModalOpenTrade.jsx",["179","180"],"import React from 'react';\r\nimport { useOpenTrade } from \"../../../context/OpenTradeContext\";\r\nimport Modal from \"react-modal\";\r\nimport OpenSelect from '../OpenSelect';\r\nimport axios from \"axios\";\r\nimport WYSIWYG from \"../../WYSIWYG\";\r\nimport { ACTION } from '../../../reducer/action';\r\nimport { customStyles } from \"../modal-style\";\r\nimport { useLogin } from \"./../../../context/LoginContext\";\r\n\r\n// https://github.com/JedWatson/react-select\r\n// https://react-select.com/home#getting-started\r\n\r\n\r\n// Modal.setAppElement(\"#root\");\r\n\r\n// 1. Multibox auswahl auf Bearbeiten\r\n// 1.1 getUpdateTrade wird mit dem kompletten Trade belegt und\r\n// 1.2 ModalOpenTrade wird geöffnet\r\n// 1.3 Immer wenn ein neuer Trade ausgewählt wird, dann feuert useEffect und \r\n// 1.4 modalOpentradeInput wird belegt?\r\n\r\nexport default function ModalOpenTrade() {\r\n    const { state: { jwt } } = useLogin();\r\n    const { state: { isCreatedTrade, getUpdateTrade }, dispatch, createTrade, updateTrade, showModalCreatedNewTrade } = useOpenTrade();\r\n    const [editorState, setEditorState] = React.useState(null);\r\n    const [selectedOption, setSelectedOption] = React.useState(\"\");\r\n    const [stocks, setStocks] = React.useState([]);\r\n\r\n    // Bei Auswahl Trade: bearbeiten, wird die passende Aktie sowie Beschreibung in das ModalNewTrade geladen\r\n    React.useEffect(() => {\r\n        if (getUpdateTrade) {\r\n            setSelectedOption(getUpdateTrade.aktie.label);\r\n            setEditorState(JSON.parse(getUpdateTrade.description));\r\n        }\r\n    }, [getUpdateTrade]);\r\n\r\n    // Laden der Aktiendaten für Selectauswahl\r\n    React.useEffect(async () => {\r\n        try {\r\n            let stocks = await axios.get(\"http://localhost:1337/akties\", {\r\n                headers: {\r\n                    Authorization:\r\n                        `Bearer ${jwt.jwt}`\r\n                }\r\n            });\r\n            setStocks(stocks.data);\r\n        } catch (err) {\r\n            alert(\"Fehler beim Laden der Aktien\");\r\n        }\r\n\r\n    }, []);\r\n\r\n    // Anlegen oder Updaten eines Trades\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        // getUpdateTrade wird gesetzt, wenn die Option: Tradebearbeiten ausgewählt wird.\r\n        if (getUpdateTrade === null) {\r\n            // Wurde eine Aktie ausgewählt?\r\n            if (selectedOption === \"\") {\r\n                alert(\"Bitte eine Aktie auswählen\");\r\n            } else {\r\n                createTrade({ selectedOption, editorState });\r\n            }\r\n        } else {\r\n            updateTrade(editorState, getUpdateTrade)\r\n        }\r\n        resetStates();\r\n        console.log(\"onSubmit - editorState: \", { editorState, getUpdateTrade }, \"   getUpdateTrade: \")\r\n    }\r\n\r\n    //Modalstates resetten, weil sonst werden diese angezeigt\r\n    function resetStates() {\r\n        setSelectedOption(\"\");\r\n        setEditorState(null);\r\n        dispatch({ type: ACTION.SETUPDATETRADENULL });\r\n    }\r\n\r\n    // Beim drücken von dem Button Abbrechen\r\n    function cancel() {\r\n        resetStates();\r\n        showModalCreatedNewTrade();\r\n    }\r\n\r\n    return (\r\n        <Modal shouldCloseOnEsc={true} onRequestClose={() => cancel()} isOpen={isCreatedTrade} style={customStyles} contentLabel=\"Example Modal\">\r\n            <form onSubmit={onSubmit} className=\"sidebar-newtrade\" >\r\n                <OpenSelect stocks={stocks} selectedOption={selectedOption} setSelectedOption={setSelectedOption} />\r\n                <WYSIWYG editorState={editorState} setEditorState={setEditorState} />\r\n                <div >\r\n                    <button style={{ margin: \"1rem 0\", width: \"100px\", backgroundColor: \"gray\", color: \"white\" }}>OK</button>\r\n                    <button onClick={() => cancel()} style={{ margin: \"1rem 0\", width: \"100px\", backgroundColor: \"gray\", color: \"white\" }}>Abbrechen</button>\r\n                </div>\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\modal\\strategieTrade\\ModalStrategieTrade.jsx",["181","182"],"import React from 'react';\r\nimport { useStrategieTrade } from \"../../../context/StrategieTradeContext\";\r\nimport Modal from \"react-modal\";\r\nimport { customStyles } from \"../modal-style\";\r\nimport WYSIWYG from '../../WYSIWYG';\r\nimport Draft from \"../../Draft.jsx\";\r\nimport { useLogin } from '../../../context/LoginContext';\r\nimport { ACTION } from '../../../reducer/action';\r\nimport { calculations } from \"../../../helper/strategieMath\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nexport default function ModalStrategieTrade() {\r\n    const [editorState, setEditorState] = React.useState(null);\r\n    const { state: { depot, user } } = useLogin();\r\n    const { state: { isStrategieTrade, strategieTrade }, updateTrade, showModalStrategieNewTrade, dispatch_strategie } = useStrategieTrade();\r\n    const [input, setInput] = React.useState({ einkaufskurs: \"\", stoppkurs: \"\", zielkurs: \"\" });\r\n    const [calc, setCalc] = React.useState(null)\r\n\r\n    React.useEffect(() => {\r\n        if (strategieTrade) {\r\n            setEditorState(JSON.parse(strategieTrade.description));\r\n            if (strategieTrade.einkaufskurs) {\r\n                setInput(prevInput => { return { ...prevInput, einkaufskurs: strategieTrade.einkaufskurs } })\r\n            }\r\n\r\n            if (strategieTrade.stoppkurs) {\r\n                setInput(prevInput => { return { ...prevInput, stoppkurs: strategieTrade.stoppkurs } })\r\n            }\r\n\r\n            if (strategieTrade.zielkurs) {\r\n                setInput(prevInput => { return { ...prevInput, zielkurs: strategieTrade.zielkurs } })\r\n            }\r\n\r\n            console.log(strategieTrade)\r\n        }\r\n    }, [strategieTrade]);\r\n\r\n    React.useEffect(() => {\r\n        if (depot) {\r\n            setCalc(calculations({ depot, input }));\r\n        }\r\n\r\n    }, [input]);\r\n\r\n    // Wenn ich OK klicke, passiert diese Funktion\r\n    function onSubmit(event, strategieTrade, input, calc) {\r\n        event.preventDefault();\r\n        console.log(calc.gUV)\r\n        if (input.einkaufskurs === \"\" || input.stoppkurs === \"\" || input.zielkurs === \"\" || calc.gUV < 1) {\r\n            if (input.einkaufskurs === \"\") {\r\n                alert(\"Bitte einen Einkaufskurs eingeben\");\r\n            } else if (input.stoppkurs === \"\") {\r\n                alert(\"Bitte einen Stoppkurs eingeben\");\r\n            } else if (input.zielkurs === \"\") {\r\n                alert(\"Bitte einen Zielkurs eingeben\");\r\n            } else if (calc.gUV < 1) {\r\n                alert(\"Achtung!!! GuV ist unter 1\");\r\n            }\r\n        } else {\r\n            try {\r\n                updateTrade(editorState, strategieTrade, input, calc);\r\n            } catch (err) {\r\n                // In catch-Block springt er nicht rein!!!\r\n                alert(\"catch in ModalStrategieTrade\")\r\n            } finally {\r\n                cancel();\r\n            }\r\n        }\r\n    }\r\n\r\n    function cancel() {\r\n        showModalStrategieNewTrade();\r\n        dispatch_strategie({ type: ACTION.SETSTRATEGIETRADE, payload: null });\r\n        setCalc(null);\r\n        setInput({ einkaufskurs: \"\", stoppkurs: \"\", zielkurs: \"\" });\r\n    }\r\n\r\n    return (\r\n        <Modal shouldCloseOnEsc={true} onRequestClose={cancel} style={customStyles} isOpen={isStrategieTrade} >\r\n            <div className={\"modal-strategie-container\"}>\r\n                <div style={{ padding: \"1rem 0\", display: \"flex\" }}>\r\n                    <span style={{ flex: 1 }}>\r\n                        <div><b>ID</b></div>\r\n                        {strategieTrade ? <div>{strategieTrade.id}</div> : <div>-</div>}\r\n                    </span>\r\n                    <span style={{ flex: 1 }}>\r\n                        <div><b>Status</b></div>\r\n                        {strategieTrade ? <div>{strategieTrade.status.bezeichnung}</div> : <div>-</div>}\r\n                    </span>\r\n                    <span style={{ flex: 1 }}>\r\n                        <div><b>Wertpapier</b></div>\r\n                        {strategieTrade ? <div>{strategieTrade.aktie.label}</div> : <div>-</div>}\r\n                    </span>\r\n                    <span style={{ flex: 1 }}>\r\n                        <div><b>Risiko in %</b></div>\r\n                        <div>{depot ? depot.risiko_per_trade + \"%\" : \"-\"}</div>\r\n                    </span >\r\n                    <span style={{ flex: 1 }}>\r\n                        <div><b>Risiko in €</b></div>\r\n                        <div>{calc ? calc.risikoProTradeInEuro + \"€\" : \"-\"}</div>\r\n                    </span>\r\n                    <span style={{ flex: 1 }}>\r\n                        <div><b>Depotwert</b></div>\r\n                        <div>\r\n                            {depot\r\n                                ? Number.parseFloat(depot.einlagen.toFixed(2)) + \"€\"\r\n                                : \"-\"\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <div><b>Inhaber</b></div>\r\n                        <div>{user ? user.email : \"-\"}</div>\r\n                    </span>\r\n                </div>\r\n                <div style={{ height: \"70%\", maxHeight: \"70%\" }}>\r\n                    <WYSIWYG editorState={editorState} setEditorState={setEditorState} />\r\n                    {/* <Draft /> */}\r\n                </div>\r\n                <form onSubmit={(event) => onSubmit(event, strategieTrade, input, calc)} style={{ padding: \"1rem 0\" }}>\r\n                    <div>\r\n                        <div>\r\n                            <input onChange={(e) => setInput({ ...input, einkaufskurs: Number.parseFloat(e.target.value) })} type=\"number\" name=\"einkaufskurs\" step=\"0.01\" value={input.einkaufskurs} placeholder=\"Einkaufskurs\" />\r\n                            <input onChange={(e) => setInput({ ...input, stoppkurs: Number.parseFloat(e.target.value) })} type=\"number\" name=\"stoppkurs\" step=\"0.01\" value={input.stoppkurs} placeholder=\"Stoppkurs\" />\r\n                            <input onChange={(e) => setInput({ ...input, zielkurs: Number.parseFloat(e.target.value) })} type=\"number\" name=\"zielkurs\" step=\"0.01\" value={input.zielkurs} placeholder=\"Zielkurs\" />\r\n                        </div>\r\n                        <div style={{ display: \"flex\", width: \"30%\" }} >\r\n\r\n                            <span style={{ flex: 1 }}>\r\n                                Einkauf\r\n\r\n                            </span>\r\n\r\n                            <span style={{ flex: 1 }}>\r\n                                Stopp\r\n\r\n                            </span>\r\n\r\n                            <span style={{ flex: 1 }}>\r\n                                Ziel\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div style={{ display: \"flex\", width: \"60%\" }}>\r\n                        <span style={{ flex: 1 }}>\r\n                            <div>\r\n                                Gewinn €\r\n                            </div>\r\n                            <div>\r\n                                {calc ? calc.gewinn.gewinnEuro : null}\r\n                            </div>\r\n                        </span>\r\n\r\n                        <span style={{ flex: 1 }}>\r\n                            <div>\r\n                                Gewinn %\r\n                            </div>\r\n                            <div>\r\n                                {calc ? calc.gewinn.gewinnProzent : null}\r\n                            </div>\r\n                        </span>\r\n\r\n                        <span style={{ flex: 1 }}>\r\n                            <div>\r\n                                Stückzahl\r\n                            </div>\r\n                            <div>\r\n                                {calc ? calc.stueckZahl : null}\r\n                            </div>\r\n                        </span>\r\n\r\n                        <span style={{ flex: 1 }}>\r\n                            <div>\r\n                                GuV\r\n                            </div>\r\n                            <div>\r\n                                {calc ? calc.gUV : null}\r\n                            </div>\r\n                        </span>\r\n\r\n                        <span style={{ flex: 1 }}>\r\n                            <div>\r\n                                Verlust %\r\n                            </div>\r\n                            <div>\r\n                                {calc ? calc.verlustInProzent : null}\r\n                            </div>\r\n                        </span>\r\n\r\n                    </div>\r\n                    <div >\r\n                        <button style={{ margin: \"2rem 0\", width: \"100px\", backgroundColor: \"gray\", color: \"white\" }} >OK</button>\r\n                        <button style={{ margin: \"2rem 0\", width: \"100px\", backgroundColor: \"gray\", color: \"white\" }} onClick={cancel}>Abbrechen</button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\modal\\OpenSelect.jsx",["183"],"import React from 'react';\r\nimport Select from 'react-select';\r\n\r\nexport default function OpenSelect({ stocks, selectedOption, setSelectedOption }) {\r\n    const [isDisable, setIsDisable] = React.useState(false);\r\n\r\n    // Wenn ein Trade geupdatet wird, wird diese Componente nicht klickbar sein!\r\n    React.useEffect(() => {\r\n        if (selectedOption === \"\") {\r\n            setIsDisable(false);\r\n        } else {\r\n            setIsDisable(true);\r\n        }\r\n    }, [])\r\n\r\n    console.log(\"selectedOption:\", selectedOption);\r\n    return (\r\n        <Select\r\n            isDisabled={isDisable}\r\n            defaultInputValue={selectedOption}\r\n            isSearchable={true}\r\n            options={stocks}\r\n            onChange={setSelectedOption}\r\n        />\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\context\\OpenTradeContext.jsx",["184"],"import React from \"react\";\r\nimport { ACTION } from \"../reducer/action\";\r\nimport axios from \"axios\";\r\nimport { opentrade_reducer } from \"../reducer/opentrade/opentrade_reducer\";\r\nimport { useLogin } from \"./LoginContext\";\r\n\r\nconst OpenTradeContext = React.createContext();\r\nexport function useOpenTrade() {\r\n    return React.useContext(OpenTradeContext);\r\n}\r\n\r\nexport function OpenTradeProvider({ children }) {\r\n    const { state: { depot, jwt } } = useLogin();\r\n    console.log(jwt);\r\n    const [state, dispatch] = React.useReducer(opentrade_reducer,\r\n        {\r\n            initalTrades: [],\r\n            isCreatedTrade: false,\r\n            getUpdateTrade: null,\r\n            loading: true,\r\n            error: \"\"\r\n        }\r\n    );\r\n\r\n    function deleteTrade(id) {\r\n        axios.delete(\"http://localhost:1337/trades/\" + id, {\r\n            headers: {\r\n                Authorization:\r\n                    `Bearer ${jwt.jwt}`\r\n            },\r\n        })\r\n            .then(dispatch({ type: ACTION.DELETETRADE, payload: id }))\r\n            .catch(err => alert(\"Fehler beim Löschen\"));\r\n    }\r\n\r\n    async function createTrade({ selectedOption, editorState }) {\r\n        try {\r\n            let status = await axios.get(\"http://localhost:1337/statuses/1\", {\r\n                headers: {\r\n                    Authorization:\r\n                        `Bearer ${jwt.jwt}`\r\n                },\r\n            });\r\n            let res = await axios({\r\n                headers: {\r\n                    Authorization:\r\n                        `Bearer ${jwt.jwt}`\r\n                },\r\n                method: \"POST\",\r\n                url: \"http://localhost:1337/trades/\",\r\n                data: {\r\n                    aktie: selectedOption,\r\n                    status: status.data,\r\n                    description: JSON.stringify(editorState),\r\n                    depot: depot\r\n                }\r\n            });\r\n            console.log(\"Ausgabe der Response: \", res);\r\n            let newTrade = {\r\n                id: res.data.id,\r\n                aktie: {\r\n                    typ: res.data.aktie.typ,\r\n                    value: res.data.aktie.value,\r\n                    wkn: res.data.aktie.wkn,\r\n                },\r\n                status: res.data.status,\r\n                description: res.data.description\r\n            }\r\n            console.log(newTrade);\r\n            dispatch({ type: ACTION.CREATETRADE, payload: newTrade })\r\n        } catch (err) {\r\n            alert(\"Fehler beim erstellen\");\r\n        }\r\n    }\r\n\r\n    function updateTrade(editorState, getUpdateTrade) {\r\n        axios({\r\n            headers: {\r\n                Authorization:\r\n                    `Bearer ${jwt.jwt}`\r\n            },\r\n            method: \"PUT\",\r\n            url: `http://localhost:1337/trades/${getUpdateTrade.id}`,\r\n            data: {\r\n                description: JSON.stringify(editorState)\r\n            },\r\n        })\r\n            .then(res => dispatch({ type: ACTION.UPDATETRADE, payload: res.data }))\r\n            .catch(err => alert(\"Fehler beim Updaten\"))\r\n            .finally(() => {\r\n                showModalCreatedNewTrade();\r\n                dispatch({\r\n                    type: ACTION.SETUPDATETRADENULL\r\n                })\r\n            });\r\n    }\r\n\r\n    function showModalCreatedNewTrade() {\r\n        dispatch({ type: ACTION.TOGGLEMODALCREATEDTRADE })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        async function getData() {\r\n            try {\r\n                let { data } = await axios.get(\"http://localhost:1337/trades\", {\r\n                    headers: {\r\n                        Authorization:\r\n                            `Bearer ${jwt.jwt}`\r\n                    }\r\n                });\r\n                let filterdData = data.filter(trade => trade.depot.id === depot.id);\r\n                console.log(filterdData);\r\n                dispatch({ type: ACTION.FETCH_SUCCESS, payload: filterdData });\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n                alert(\"Probleme beim Laden der Trades\");\r\n            }\r\n        }\r\n        getData();\r\n    }, [state.isCreatedTrade])\r\n\r\n    return (\r\n        <OpenTradeContext.Provider value={{ state, dispatch, deleteTrade, createTrade, updateTrade, showModalCreatedNewTrade }}>\r\n            {children}\r\n        </OpenTradeContext.Provider>\r\n    )\r\n}","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\reducer\\action.js",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\context\\StrategieTradeContext.jsx",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\reducer\\strategietrade\\strategietrade_reducer.js",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\modal\\modal-style.js",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\context\\LoginContext.jsx",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\reducer\\login\\login_reducer.js",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\helper\\formatDate.js",["185"],"import moment from 'moment';\r\nexport function formatDate(date) {\r\n    let x = moment(date).local().toDate()\r\n    return moment(date).format(\"DD.MM.YYYY\");\r\n}\r\n\r\nexport function isBefore(date){\r\n    let compareDate = moment(date, \"YYYY-MM-DD\");\r\n    let today = moment(new Date(), \"YYYY-MM-DD\");\r\n    return compareDate.isBefore(today, \"day\");\r\n}","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\helper\\strategieMath.js",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\context\\GoMarketTradeContext.jsx",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\reducer\\gomarket\\gomarkettrade_reducer.js",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\modal\\gomarketTrade\\ModalGoMarket.jsx",["186"],"import React from 'react';\r\nimport { useStrategieTrade } from \"../../../context/StrategieTradeContext\";\r\nimport Modal from \"react-modal\";\r\nimport { customStyles } from \"../modal-style\";\r\nimport WYSIWYG from '../../WYSIWYG';\r\nimport { useLogin } from '../../../context/LoginContext';\r\nimport { ACTION } from '../../../reducer/action';\r\nimport { calculations } from \"../../../helper/strategieMath\";\r\nimport { useGoMarketTrade } from '../../../context/GoMarketTradeContext';\r\nimport { isBefore } from '../../../helper/formatDate';\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nexport default function ModalGoMarketTrade() {\r\n    const [editorState, setEditorState] = React.useState(null);\r\n    const [input, setInput] = React.useState({ einkaufskurs: \"\", stoppkurs: \"\", zielkurs: \"\" });\r\n    const [trailingDate, setTrailingDate] = React.useState(\"\");\r\n    const [calc, setCalc] = React.useState(null)\r\n    const { state: { depot } } = useLogin();\r\n    const { updateTrade } = useStrategieTrade();\r\n    const { state: { isGoMarketTrade, goMarketTrade }, showModalGoMarketNewTrade, dispatch_gomarket } = useGoMarketTrade();\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (goMarketTrade) {\r\n            setEditorState(JSON.parse(goMarketTrade.description));\r\n            if (goMarketTrade.einkaufskurs) {\r\n                setInput(prevInput => { return { ...prevInput, einkaufskurs: goMarketTrade.einkaufskurs } })\r\n            }\r\n\r\n            if (goMarketTrade.stoppkurs) {\r\n                setInput(prevInput => { return { ...prevInput, stoppkurs: goMarketTrade.stoppkurs } })\r\n            }\r\n\r\n            if (goMarketTrade.zielkurs) {\r\n                setInput(prevInput => { return { ...prevInput, zielkurs: goMarketTrade.zielkurs } })\r\n            }\r\n            if (goMarketTrade.trailing_stop_datum) {\r\n\r\n                let datum = goMarketTrade.trailing_stop_datum.split(\"T\")[0];\r\n                setTrailingDate(datum)\r\n            }\r\n\r\n            console.log(goMarketTrade)\r\n        }\r\n    }, [goMarketTrade]);\r\n\r\n    React.useEffect(() => {\r\n        if (depot) {\r\n            setCalc(calculations({ depot, input }));\r\n        }\r\n\r\n    }, [input]);\r\n\r\n    // Wenn ich OK klicke, passiert diese Funktion\r\n    function onSubmit(event, goMarketTrade, input, calc, trailingDate) {\r\n        event.preventDefault();\r\n        if (input.einkaufskurs === \"\" || input.stoppkurs === \"\" || input.zielkurs === \"\" || isBefore(trailingDate)) {\r\n            if (input.stoppkurs === \"\") {\r\n                alert(\"Bitte einen Stoppkurs eingeben\");\r\n            } else if (input.zielkurs === \"\") {\r\n                alert(\"Bitte einen Zielkurs eingeben\");\r\n            } else if (isBefore(trailingDate)) {\r\n                alert(\"Bitte ein zukünftiges Datum eintragen\");\r\n            }\r\n        } else {\r\n            try {\r\n                updateTrade(editorState, goMarketTrade, input, calc, trailingDate);\r\n            } catch (err) {\r\n                // In catch-Block springt er nicht rein!!!\r\n                alert(\"catch in ModalStrategieTrade\")\r\n            } finally {\r\n                cancel();\r\n            }\r\n        }\r\n    }\r\n\r\n    function cancel() {\r\n        showModalGoMarketNewTrade();\r\n        setTrailingDate(\"\");\r\n        dispatch_gomarket({ type: ACTION.SETGOMARKETTRADE, payload: null });\r\n    }\r\n\r\n    return (\r\n        <Modal shouldCloseOnEsc={true} onRequestClose={cancel} style={customStyles} isOpen={isGoMarketTrade} >\r\n            <div className={\"modal-strategie-container\"}>\r\n                <div style={{ padding: \"1rem 0\", display: \"flex\" }}>\r\n                    <span style={{ flex: 1 }}>\r\n                        <div><b>ID</b></div>\r\n                        {goMarketTrade ? <div>{goMarketTrade.id}</div> : <div>-</div>}\r\n                    </span>\r\n                    <span style={{ flex: 1 }}>\r\n                        <div><b>Status</b></div>\r\n                        {goMarketTrade ? <div>{goMarketTrade.status.bezeichnung}</div> : <div>-</div>}\r\n                    </span>\r\n                    <span style={{ flex: 1 }}>\r\n                        <div><b>Wertpapier</b></div>\r\n                        {goMarketTrade ? <div>{goMarketTrade.aktie.label}</div> : <div>-</div>}\r\n                    </span>\r\n                    <span style={{ flex: 1 }}>\r\n                        <div><b>Risiko in %</b></div>\r\n                        <div>{depot ? depot.risiko_per_trade + \"%\" : \"-\"}</div>\r\n                    </span >\r\n                    <span style={{ flex: 1 }}>\r\n                        <div><b>Risiko in €</b></div>\r\n                        <div>{depot ? depot.einlagen * depot.risiko_per_trade / 100 + \"€\" : \"-\"}</div>\r\n                    </span>\r\n                    <span style={{ flex: 1 }}>\r\n                        <div><b>Depotwert</b></div>\r\n                        <div>{depot ? depot.einlagen + \"€\" : \"-\"}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div><b>Inhaber</b></div>\r\n                        <div>{depot ? depot.users_permissions_user.email : \"-\"}</div>\r\n                    </span>\r\n                </div>\r\n                <div style={{ height: \"70%\", maxHeight: \"70%\" }}>\r\n                    <WYSIWYG editorState={editorState} setEditorState={setEditorState} />\r\n                    {/* <Draft /> */}\r\n                </div>\r\n                <form onSubmit={(event) => onSubmit(event, goMarketTrade, input, calc, trailingDate)} style={{ padding: \"1rem 0\" }}>\r\n                    <div>\r\n                        <div>\r\n                            <input disabled onChange={(e) => setInput({ ...input, einkaufskurs: Number.parseFloat(e.target.value) })} type=\"number\" name=\"einkaufskurs\" step=\"0.01\" value={input.einkaufskurs} placeholder=\"Einkaufskurs\" />\r\n                            <input onChange={(e) => setInput({ ...input, stoppkurs: Number.parseFloat(e.target.value) })} type=\"number\" name=\"stoppkurs\" step=\"0.01\" value={input.stoppkurs} placeholder=\"Stoppkurs\" />\r\n                            <input onChange={(e) => setInput({ ...input, zielkurs: Number.parseFloat(e.target.value) })} type=\"number\" name=\"zielkurs\" step=\"0.01\" value={input.zielkurs} placeholder=\"Zielkurs\" />\r\n                            <input type=\"date\" required onChange={(e) => setTrailingDate(e.target.value)} value={trailingDate} /><span>Traillingdatum</span>\r\n                        </div>\r\n                        <div style={{ display: \"flex\", width: \"30%\" }} >\r\n\r\n                            <span style={{ flex: 1 }}>\r\n                                Einkauf\r\n\r\n                            </span>\r\n\r\n                            <span style={{ flex: 1 }}>\r\n                                Stopp\r\n\r\n                            </span>\r\n\r\n                            <span style={{ flex: 1 }}>\r\n                                Ziel\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div style={{ display: \"flex\", width: \"60%\" }}>\r\n                        <span style={{ flex: 1 }}>\r\n                            <div>\r\n                                Gewinn €\r\n                            </div>\r\n                            <div>\r\n                                {calc ? calc.gewinn.gewinnEuro : null}\r\n                            </div>\r\n                        </span>\r\n\r\n                        <span style={{ flex: 1 }}>\r\n                            <div>\r\n                                Gewinn %\r\n                            </div>\r\n                            <div>\r\n                                {calc ? calc.gewinn.gewinnProzent : null}\r\n                            </div>\r\n                        </span>\r\n\r\n                        <span style={{ flex: 1 }}>\r\n                            <div>\r\n                                Stückzahl\r\n                            </div>\r\n                            <div>\r\n                                {calc ? calc.stueckZahl : null}\r\n                            </div>\r\n                        </span>\r\n\r\n                        <span style={{ flex: 1 }}>\r\n                            <div>\r\n                                GuV\r\n                            </div>\r\n                            <div>\r\n                                {calc ? calc.gUV : null}\r\n                            </div>\r\n                        </span>\r\n\r\n                        <span style={{ flex: 1 }}>\r\n                            <div>\r\n                                Verlust %\r\n                            </div>\r\n                            <div>\r\n                                {calc ? calc.verlustInProzent : null}\r\n                            </div>\r\n                        </span>\r\n\r\n                    </div>\r\n                    <div >\r\n                        <button style={{ margin: \"2rem 0\", width: \"100px\", backgroundColor: \"gray\", color: \"white\" }} >OK</button>\r\n                        <button style={{ margin: \"2rem 0\", width: \"100px\", backgroundColor: \"gray\", color: \"white\" }} onClick={cancel}>Abbrechen</button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\modal\\gomarketTrade\\ModalGoMarketOnVista.jsx",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\context\\ClosedTradeContext.jsx",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\reducer\\closed\\closedtrade_reducer.js",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\modal\\closedTrade\\ModalClosedTrade.jsx",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\pages\\main\\MainPage.jsx",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\pages\\main\\components\\Main.jsx",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\pages\\main\\components\\MainOpenTrades.jsx",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\pages\\main\\components\\MainStrategieTrades.jsx",["187"],"import React from 'react';\r\nimport { useSearchbar } from \"./../../../context/SearchbarContext\";\r\nimport { useOpenTrade } from \"./../../../context/OpenTradeContext\";\r\nimport Loader from './../../../components/Loader';\r\nimport { useStrategieTrade } from './../../../context/StrategieTradeContext';\r\nimport { useGoMarketTrade } from \"./../../../context/GoMarketTradeContext\";\r\nimport { ACTION } from \"./../../../reducer/action\";\r\n\r\nexport default function MainStrategieTrades() {\r\n    const { state: { loading }, dispatch, deleteTrade } = useOpenTrade();\r\n    const { strategieTrades } = useSearchbar();\r\n    const { dispatch_strategie, showModalStrategieNewTrade } = useStrategieTrade();\r\n    const { showModalGoMarketOnVista, dispatch_gomarket } = useGoMarketTrade();\r\n\r\n    function onChangeOption(evt, trade) {\r\n        if (evt.target.value === \"LÖSCHEN\") {\r\n            deleteTrade(trade.id);\r\n        }\r\n\r\n        if (evt.target.value === \"BEARBEITEN\") {\r\n            dispatch_strategie({ type: ACTION.SETSTRATEGIETRADE, payload: trade })\r\n            showModalStrategieNewTrade();\r\n        }\r\n        if (evt.target.value === \"HANDELN\") {\r\n            dispatch_gomarket({ type: ACTION.SETGOMARKETTRADE, payload: trade })\r\n            showModalGoMarketOnVista();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-strategie\">\r\n            <div className=\"main-opentrades-header\">\r\n                Strategie der Trades\r\n            </div>\r\n            {strategieTrades.length > 0\r\n                ?\r\n                <div className=\"main-opentrades-content\">\r\n                    {strategieTrades.map((trade, i) =>\r\n                        <div key={i} className=\"main-opentrades-content-trade\">\r\n                            <div className=\"main-opentrades-content-trade-text\">\r\n                                {trade.id}: {trade.aktie.label} EK: {trade.einkaufskurs}€\r\n                            </div>\r\n                            <select\r\n                                value=\"\"\r\n                                name=\"123\"\r\n                                id=\"status\"\r\n                                className=\"main-opentrades-content-trade-select\"\r\n                                onChange={(evt) => onChangeOption(evt, trade)}\r\n                            >\r\n                                <option value=\"\"  > </option>\r\n                                <option value=\"BEARBEITEN\">Trade bearbeiten </option>\r\n                                <option value=\"HANDELN\" >Setze auf Handel</option>\r\n                                <option value=\"LÖSCHEN\">Löschen</option>\r\n                            </select>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                : loading\r\n                    ? <Loader />\r\n                    : <div>Keine Trades im Strategiestatus!!!</div>}\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\pages\\main\\components\\MainGoMarketTrades.jsx",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\Navbar.jsx",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\layout\\Layout.jsx",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\pages\\view\\ViewPage.jsx",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\pages\\login\\Login.jsx",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\modal\\sidebar\\ModalSidebar.jsx",["188"],"import React from 'react';\r\nimport { ModalSidebarStyles } from \"./../modal-style\";\r\nimport Modal from \"react-modal\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ModalSidebar({ isSidebarShow, setIsSidebarShow }) {\r\n    function cancel() {\r\n        setIsSidebarShow(!isSidebarShow);\r\n    }\r\n\r\n    return (\r\n        <Modal shouldCloseOnEsc={true} onRequestClose={cancel} style={ModalSidebarStyles} isOpen={isSidebarShow} >\r\n            <div className=\"sidebar-brandwrapper\">\r\n                <div className=\"sidebar-brand\">\r\n                    <span className=\"sidebar-brand-span\" onClick={() => setIsSidebarShow(!isSidebarShow)} >Börsi</span>\r\n                </div>\r\n                <div>\r\n                    <div className=\"sidebar-links\" >\r\n                        <Link onClick={() => setIsSidebarShow(!isSidebarShow)} to=\"/main\" className=\"sidebar-links-link\">Main</Link>\r\n                    </div>\r\n                    <div className=\"sidebar-links\">\r\n                        <Link onClick={() => setIsSidebarShow(!isSidebarShow)} to=\"/view\" className=\"sidebar-links-link\">Abgeschlossene Trades</Link>\r\n                    </div>\r\n                    <div className=\"sidebar-links\">\r\n                        <a className=\"sidebar-links-link\" href=\"https://webtrading.onvista-bank.de/login\" target=\"_blank\">OnVista</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n","C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\components\\PrivateRoute.jsx",[],"C:\\Users\\Ratte\\Desktop.I\\VSC\\Börsi\\frontend\\src\\pages\\view\\DataTable.jsx",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"189","replacedBy":"193"},{"ruleId":"191","replacedBy":"194"},{"ruleId":"195","severity":2,"message":"196","line":6,"column":37,"nodeType":"197","messageId":"198","endLine":6,"endColumn":48},{"ruleId":"195","severity":2,"message":"199","line":18,"column":26,"nodeType":"197","messageId":"198","endLine":18,"endColumn":35},{"ruleId":"195","severity":2,"message":"199","line":28,"column":36,"nodeType":"197","messageId":"198","endLine":28,"endColumn":45},{"ruleId":"195","severity":2,"message":"200","line":38,"column":16,"nodeType":"197","messageId":"198","endLine":38,"endColumn":36},{"ruleId":"195","severity":2,"message":"199","line":43,"column":13,"nodeType":"197","messageId":"198","endLine":43,"endColumn":22},{"ruleId":"195","severity":2,"message":"199","line":52,"column":13,"nodeType":"197","messageId":"198","endLine":52,"endColumn":22},{"ruleId":"201","severity":2,"message":"202","line":83,"column":22,"nodeType":"203","endLine":83,"endColumn":28},{"ruleId":"204","severity":1,"message":"205","line":39,"column":21,"nodeType":"206","endLine":52,"endColumn":6},{"ruleId":"204","severity":1,"message":"207","line":52,"column":8,"nodeType":"208","endLine":52,"endColumn":10,"suggestions":"209"},{"ruleId":"210","severity":1,"message":"211","line":6,"column":8,"nodeType":"197","messageId":"212","endLine":6,"endColumn":13},{"ruleId":"204","severity":1,"message":"213","line":44,"column":8,"nodeType":"208","endLine":44,"endColumn":15,"suggestions":"214"},{"ruleId":"204","severity":1,"message":"215","line":14,"column":8,"nodeType":"208","endLine":14,"endColumn":10,"suggestions":"216"},{"ruleId":"204","severity":1,"message":"217","line":121,"column":8,"nodeType":"208","endLine":121,"endColumn":30,"suggestions":"218"},{"ruleId":"210","severity":1,"message":"219","line":3,"column":9,"nodeType":"197","messageId":"212","endLine":3,"endColumn":10},{"ruleId":"204","severity":1,"message":"213","line":53,"column":8,"nodeType":"208","endLine":53,"endColumn":15,"suggestions":"220"},{"ruleId":"210","severity":1,"message":"221","line":10,"column":33,"nodeType":"197","messageId":"212","endLine":10,"endColumn":41},{"ruleId":"222","severity":1,"message":"223","line":25,"column":107,"nodeType":"224","endLine":25,"endColumn":122},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],["225"],["226"],"no-undef","'EditorState' is not defined.","Identifier","undef","'RichUtils' is not defined.","'getDefaultKeyBinding' is not defined.","react/jsx-no-undef","'Editor' is not defined.","JSXIdentifier","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook React.useEffect has a missing dependency: 'jwt.jwt'. Either include it or remove the dependency array.","ArrayExpression",["227"],"no-unused-vars","'Draft' is defined but never used.","unusedVar","React Hook React.useEffect has a missing dependency: 'depot'. Either include it or remove the dependency array.",["228"],"React Hook React.useEffect has a missing dependency: 'selectedOption'. Either include it or remove the dependency array.",["229"],"React Hook React.useEffect has missing dependencies: 'depot.id' and 'jwt.jwt'. Either include them or remove the dependency array.",["230"],"'x' is assigned a value but never used.",["231"],"'dispatch' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"234","fix":"240"},"Update the dependencies array to be: [jwt.jwt]",{"range":"241","text":"242"},"Update the dependencies array to be: [depot, input]",{"range":"243","text":"244"},"Update the dependencies array to be: [selectedOption]",{"range":"245","text":"246"},"Update the dependencies array to be: [depot.id, jwt.jwt, state.isCreatedTrade]",{"range":"247","text":"248"},{"range":"249","text":"244"},[2003,2005],"[jwt.jwt]",[1772,1779],"[depot, input]",[467,469],"[selectedOption]",[4086,4108],"[depot.id, jwt.jwt, state.isCreatedTrade]",[2136,2143]]